+-----------------------------+
| 10:53 - 프로그래밍 접근방법 |
+-----------------------------+

언어를 배우는 것

적정 용도의 언어를 적정 수준으로 배워라!

하고싶은 것이 무엇이냐에 따른 적절한 언어 배우는 것

웹 개발 하고 싶은데 C를 배우는것? -> 효율적이지 않음

운영체제를 만들고 싶은데 PHP를 배우는 것? -> 역시 비효율

웹브라우저에서 동작하는 어떤 로직을 만드려고 하는데 JavaScript를 안배우고 Java를 사용하려고 한다?? -> 완전히 잘못된 선택

그런 의미에서 적정 언어를 배워야 한다는 것!!

적정 수준이라는 것은?

서툰 코딩 실력에 대한 걱정 때문에 너무 언어공부만 하게 된다면, 무엇을 만드는 과정이 너무 뒤가 되어 버린다.

2 track 전략!! 

장기 전략 -> 장기적으로 능숙한 언어의 사용자가 되는 것

단기 전략 -> 서툰 코딩 실력으로 무언가 만들어 보는 것

수단과 목적을 혼동해서는 안된다!

언어는 무엇을 만들기 위한 수단!

API를 탐험해 봐라!! -> 세상에 어떠한 API가 존재하는지 탐구하는 것은 프로그래머의 소양!

프로그래밍 언어로 API를 조합해서 애플리케이션을 만들어 보세요!

이 과정에서 중요한 것은, 그것을 좋아할 관객을 찾는 것

표현하는 것은 사람의 욕망!

자기 자신도 관객!

주변에 있는 친구들

주변에 있는 가족

주변에 있는 어려운 사람들 등등..

그것을 통해서 사람들이 기뻐하는 모습을 보는 것!! 이것이 이 일을 지속하게 하는 원동력이다.

한계를 경험하세요

더 잘 만들고 싶을 때 -> 더 잘 할 수 있는 방법에 대한 연구를 찾아라

대학의 전공과정

대학에서 배우는 것의 취지를 파악해 놓았다가, 한계를 느꼈을 때 그것을 해결해줄 수 있는 분야를 찾아서 공부하면 된다.

Computational Thinking

컴퓨터적 사고

알고리즘 / 데이터 구조 / 디자인 패턴 / 프래임 워크 / 컴퓨터 구조

순서가 중요하다...


